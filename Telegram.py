import logging
from telegram import Update
from telegram.ext import Application, CommandHandler, CallbackContext
import psycopg2
import os
import uuid

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –Ω–∞ –ª–æ–≥–æ–≤–µ
logging.basicConfig(format='%(asctime)s - %(name)s - %(levelname)s - %(message)s',
                    level=logging.INFO)
logger = logging.getLogger(__name__)

# –í–∑–µ–º–∏ TELEGRAM API Token –æ—Ç @BotFather
TELEGRAM_TOKEN = os.getenv("TELEGRAM_TOKEN")

# –í–∑–µ–º–∏ –¥–∞–Ω–Ω–∏ –∑–∞ Postgres
DATABASE_URL = os.getenv("DATABASE_URL")


# –§—É–Ω–∫—Ü–∏—è –∑–∞ —Å–≤—ä—Ä–∑–≤–∞–Ω–µ –∫—ä–º –±–∞–∑–∞—Ç–∞
def connect_db():
    conn = psycopg2.connect(DATABASE_URL, sslmode='require')
    return conn


# –§—É–Ω–∫—Ü–∏—è –∑–∞ –¥–æ–±–∞–≤—è–Ω–µ –Ω–∞ –∫–∞–Ω–∞–ª
async def add_channel(update: Update, context: CallbackContext) -> None:
    if len(context.args) > 1:
        channel_name = context.args[0]
        channel_url = context.args[1]

        try:
            # –°–≤—ä—Ä–∑–≤–∞–Ω–µ –∫—ä–º –±–∞–∑–∞—Ç–∞
            conn = connect_db()
            cursor = conn.cursor()

            # –î–æ–±–∞–≤—è–Ω–µ –Ω–∞ –∫–∞–Ω–∞–ª–∞ –≤ –±–∞–∑–∞—Ç–∞
            cursor.execute("""
                INSERT INTO channels (channel_name, channel_url)
                VALUES (%s, %s)
                RETURNING id
            """, (channel_name, channel_url))
            channel_id = cursor.fetchone()[0]
            conn.commit()

            cursor.close()
            conn.close()

            await update.message.reply_text(
                f"‚úÖ –ö–∞–Ω–∞–ª—ä—Ç [{channel_name}]({channel_url}) –±–µ—à–µ –¥–æ–±–∞–≤–µ–Ω —É—Å–ø–µ—à–Ω–æ!",
                parse_mode="Markdown",
                disable_web_page_preview=True
            )

        except Exception as e:
            await update.message.reply_text(f"–ì—Ä–µ—à–∫–∞ –ø—Ä–∏ –¥–æ–±–∞–≤—è–Ω–µ –Ω–∞ –∫–∞–Ω–∞–ª–∞: {e}")
    else:
        await update.message.reply_text("–ú–æ–ª—è, –¥–æ–±–∞–≤–µ—Ç–µ –∏–º–µ –Ω–∞ –∫–∞–Ω–∞–ª–∞ –∏ URL.\n"
                                        "–í—ä–≤ —Ñ–æ–º–∞—Ç: /add_channel human https://www.youtube.com/@human")


async def add_video(update: Update, context: CallbackContext) -> None:
    if len(context.args) > 1:
        video_url = context.args[0]
        channel_url = context.args[1]

        try:
            # –°–≤—ä—Ä–∑–≤–∞–Ω–µ –∫—ä–º –±–∞–∑–∞—Ç–∞
            conn = connect_db()
            cursor = conn.cursor()

            # –ù–∞–º–µ—Ä–∏ channel_id —á—Ä–µ–∑ URL –Ω–∞ –∫–∞–Ω–∞–ª–∞
            cursor.execute("SELECT id FROM channels WHERE channel_url = %s", (channel_url,))
            result = cursor.fetchone()

            if result:
                channel_id = result[0]
                # –î–æ–±–∞–≤—è–Ω–µ –Ω–∞ –≤–∏–¥–µ–æ—Ç–æ –≤ –±–∞–∑–∞—Ç–∞
                # –ì–µ–Ω–µ—Ä–∏—Ä–∞–º–µ —É–Ω–∏–∫–∞–ª–µ–Ω video_id (–Ω–∞–ø—Ä–∏–º–µ—Ä —á—Ä–µ–∑ UUID)
                video_id = str(uuid.uuid4())

                # –î–æ–±–∞–≤—è–Ω–µ –Ω–∞ –≤–∏–¥–µ–æ—Ç–æ –≤ –±–∞–∑–∞—Ç–∞
                cursor.execute("""
                                   INSERT INTO videos (channel_id, video_url, video_id)
                                   VALUES (%s, %s, %s)
                               """, (channel_id, video_url, video_id))
                conn.commit()

                await update.message.reply_text(
                    f"üé¨ –í–∏–¥–µ–æ [–ª–∏–Ω–∫]({video_url}) –±–µ—à–µ –¥–æ–±–∞–≤–µ–Ω–æ —É—Å–ø–µ—à–Ω–æ!",
                    parse_mode="Markdown",
                    disable_web_page_preview=True
                )

            else:
                await update.message.reply_text("–ö–∞–Ω–∞–ª—ä—Ç –Ω–µ —Å—ä—â–µ—Å—Ç–≤—É–≤–∞ –≤ –±–∞–∑–∞—Ç–∞.")

            cursor.close()
            conn.close()

        except Exception as e:
            await update.message.reply_text(f"–ì—Ä–µ—à–∫–∞ –ø—Ä–∏ –¥–æ–±–∞–≤—è–Ω–µ –Ω–∞ –≤–∏–¥–µ–æ—Ç–æ: {e}")
    else:
        await update.message.reply_text("–ú–æ–ª—è, –¥–æ–±–∞–≤–µ—Ç–µ URL –Ω–∞ –≤–∏–¥–µ–æ—Ç–æ –∏ –Ω–∞ –∫–∞–Ω–∞–ª–∞.\n"
                                        "–í—ä–≤ —Ñ–æ–º–∞—Ç: /add_video https://www.youtube.com/watch?v=dQw—Ñ45—Ö9WgXcQ "
                                        "https://www.youtube.com/@HUMAN")


# –§—É–Ω–∫—Ü–∏—è –∑–∞ –ø–æ–∫–∞–∑–≤–∞–Ω–µ –Ω–∞ –≤—Å–∏—á–∫–∏ –∫–∞–Ω–∞–ª–∏
async def list_channels(update: Update, context: CallbackContext) -> None:
    try:
        # –°–≤—ä—Ä–∑–≤–∞–Ω–µ –∫—ä–º –±–∞–∑–∞—Ç–∞
        conn = connect_db()
        cursor = conn.cursor()

        # –ò–∑–≤–ª–∏—á–∞–Ω–µ –Ω–∞ –≤—Å–∏—á–∫–∏ –∫–∞–Ω–∞–ª–∏
        cursor.execute("SELECT channel_name, channel_url FROM channels")
        channels = cursor.fetchall()

        cursor.close()
        conn.close()

        if not channels:
            await update.message.reply_text("‚ùå –ù—è–º–∞ –¥–æ–±–∞–≤–µ–Ω–∏ –∫–∞–Ω–∞–ª–∏.")
            return

        # –ì–µ–Ω–µ—Ä–∏—Ä–∞–Ω–µ –Ω–∞ —Å—ä–æ–±—â–µ–Ω–∏–µ—Ç–æ –≤—ä–≤ —Ñ–æ—Ä–º–∞—Ç Markdown
        message = "**üìå –î–æ–±–∞–≤–µ–Ω–∏ –∫–∞–Ω–∞–ª–∏:**\n\n"
        for index, (name, url) in enumerate(channels, start=1):
            message += f"‚û§ **{index}. [{name}]({url})**\n"

        await update.message.reply_text(message, parse_mode="Markdown", disable_web_page_preview=True)

    except Exception as e:
        await update.message.reply_text(f"‚ö†Ô∏è –ì—Ä–µ—à–∫–∞ –ø—Ä–∏ –∏–∑–≤–ª–∏—á–∞–Ω–µ –Ω–∞ –∫–∞–Ω–∞–ª–∏—Ç–µ: {e}")


async def list_videos(update: Update, context: CallbackContext) -> None:
    try:
        # –°–≤—ä—Ä–∑–≤–∞–Ω–µ –∫—ä–º –±–∞–∑–∞—Ç–∞
        conn = connect_db()
        cursor = conn.cursor()

        # –ò–∑–≤–ª–∏—á–∞–Ω–µ –Ω–∞ –≤—Å–∏—á–∫–∏ –≤–∏–¥–µ–∞ + –∏–º–µ—Ç–æ –Ω–∞ –∫–∞–Ω–∞–ª–∞
        cursor.execute("""
            SELECT v.video_url, c.channel_name, c.channel_url 
            FROM videos v
            JOIN channels c ON v.channel_id = c.id
            ORDER BY c.channel_name
        """)
        videos = cursor.fetchall()

        cursor.close()
        conn.close()

        if not videos:
            await update.message.reply_text("‚ùå –ù—è–º–∞ –¥–æ–±–∞–≤–µ–Ω–∏ –≤–∏–¥–µ–∞.")
            return

        # –ì–µ–Ω–µ—Ä–∏—Ä–∞–Ω–µ –Ω–∞ —Å—ä–æ–±—â–µ–Ω–∏–µ—Ç–æ –≤—ä–≤ —Ñ–æ—Ä–º–∞—Ç Markdown
        message = "**üé¨ –î–æ–±–∞–≤–µ–Ω–∏ –≤–∏–¥–µ–∞:**\n\n"
        for index, (video_url, channel_name, channel_url) in enumerate(videos, start=1):
            message += f"‚û§ **{index}. [–í–∏–¥–µ–æ]({video_url})** –æ—Ç **[{channel_name}]({channel_url})**\n"

        await update.message.reply_text(message, parse_mode="Markdown", disable_web_page_preview=True)

    except Exception as e:
        await update.message.reply_text(f"‚ö†Ô∏è –ì—Ä–µ—à–∫–∞ –ø—Ä–∏ –∏–∑–≤–ª–∏—á–∞–Ω–µ –Ω–∞ –≤–∏–¥–µ–∞—Ç–∞: {e}")


# –§—É–Ω–∫—Ü–∏—è –∑–∞ —Å—Ç–∞—Ä—Ç–∏—Ä–∞–Ω–µ –Ω–∞ –±–æ—Ç–∞
async def start(update: Update, context: CallbackContext) -> None:
    user_name = update.message.from_user.first_name
    message = (
        f"üëã **–ó–¥—Ä–∞–≤–µ–π, {user_name}!**\n\n"
        f"–î–æ–±—Ä–µ –¥–æ—à—ä–ª –≤ YouTube Comment Bot! üé•\n"
        f"‚ÑπÔ∏è –ò–∑–ø–æ–ª–∑–≤–∞–π –∫–æ–º–∞–Ω–¥–∞—Ç–∞ `/help`, –∑–∞ –¥–∞ –≤–∏–¥–∏—à –≤—Å–∏—á–∫–∏ –≤—ä–∑–º–æ–∂–Ω–æ—Å—Ç–∏ –Ω–∞ –±–æ—Ç–∞."
    )

    await update.message.reply_text(message, parse_mode="Markdown")


async def help_command(update: Update, context: CallbackContext) -> None:
    message = (
        f"üí° **–ö–æ–º–∞–Ω–¥–∏, –∫–æ–∏—Ç–æ –º–æ–∂–µ—à –¥–∞ –∏–∑–ø–æ–ª–∑–≤–∞—à:**\n\n"
        f"üìå **–î–æ–±–∞–≤—è–Ω–µ –Ω–∞ –∫–∞–Ω–∞–ª:**\n"
        f"   `/add_channel`  *<–∏–º–µ –Ω–∞ –∫–∞–Ω–∞–ª–∞> <URL –Ω–∞ –∫–∞–Ω–∞–ª–∞>*\n\n"
        f"üé¨ **–î–æ–±–∞–≤—è–Ω–µ –Ω–∞ –≤–∏–¥–µ–æ:**\n"
        f"   `/add_video`  *<URL –Ω–∞ –≤–∏–¥–µ–æ—Ç–æ> <URL –Ω–∞ –∫–∞–Ω–∞–ª–∞>*\n\n"
        f"üìÇ **–õ–∏—Å—Ç–≤–∞–Ω–µ –Ω–∞ –∫–∞–Ω–∞–ª–∏:**\n"
        f"   `/list_channels`\n\n"
        f"üìú **–õ–∏—Å—Ç–≤–∞–Ω–µ –Ω–∞ –≤–∏–¥–µ–∞:**\n"
        f"   `/list_videos`\n\n"
        f"üîç **–û—â–µ —Ñ—É–Ω–∫—Ü–∏–∏ —Å–∫–æ—Ä–æ...**"
    )

    await update.message.reply_text(message, parse_mode="Markdown", disable_web_page_preview=True)


# –û—Å–Ω–æ–≤–Ω–∞ —Ñ—É–Ω–∫—Ü–∏—è –∑–∞ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–∞–Ω–µ –Ω–∞ –±–æ—Ç–∞
def main() -> None:
    # –ò–∑–ø–æ–ª–∑–≤–∞–º–µ –Ω–æ–≤–∏—è Application –∫–ª–∞—Å –∑–∞ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–∞–Ω–µ –Ω–∞ –±–æ—Ç–∞
    application = Application.builder().token(TELEGRAM_TOKEN).build()

    # –î–æ–±–∞–≤—è–Ω–µ –Ω–∞ –∫–æ–º–∞–Ω–¥–∏—Ç–µ
    application.add_handler(CommandHandler("start", start))
    application.add_handler(CommandHandler("add_channel", add_channel))
    application.add_handler(CommandHandler("add_video", add_video))
    application.add_handler(CommandHandler("list_channels", list_channels))
    application.add_handler(CommandHandler("list_videos", list_videos))
    application.add_handler(CommandHandler("help", help_command))

    # –°—Ç–∞—Ä—Ç–∏—Ä–∞–Ω–µ –Ω–∞ –±–æ—Ç–∞
    application.run_polling()


if __name__ == '__main__':
    main()
